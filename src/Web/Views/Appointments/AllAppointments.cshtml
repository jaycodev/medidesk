@model IEnumerable<Web.Models.Appointments.AppointmentListViewModel>

@{
    ViewData["Title"] = "Citas médicas";
    var culture = new System.Globalization.CultureInfo("es-PE");
}

<h4 class="text-center mb-3 text-body-emphasis">
    <i class="fa-solid fa-notes-medical me-1"></i>
    Citas médicas
</h4>

<div class="mb-3">
    <button type="button" class="btn btn-danger me-1" data-export
            onclick="location.href='@Url.Action("ExportToPdf", new { filter = "all" })'">
        <i class="fa-solid fa-file-pdf me-1"></i>
        PDF
    </button>

    <button type="button" class="btn btn-success" data-export
            onclick="location.href='@Url.Action("ExportToExcel", new { filter = "all" })'">
        <i class="fa-solid fa-file-excel me-1"></i>
        Excel
    </button>
</div>

<div id="spinnerLoad" class="d-flex justify-content-center align-items-center my-5">
    <div class="spinner-border" role="status">
        <span class="visually-hidden">Cargando...</span>
    </div>
</div>

<section id="tableContainer" class="d-none">
    <table id="appointmentTable" class="table mb-0">
        <thead>
            <tr>
                <th class="text-start">@Html.DisplayNameFor(model => model.AppointmentId)</th>
                <th class="text-start">@Html.DisplayNameFor(model => model.SpecialtyName)</th>
                <th>@Html.DisplayNameFor(model => model.DoctorName)</th>
                <th>@Html.DisplayNameFor(model => model.PatientName)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.ConsultationType)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Date)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Time)</th>
                <th class="text-center">@Html.DisplayNameFor(model => model.Status)</th>
                <th class="text-center"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                var type = item.ConsultationType?.ToLower() ?? "";
                var icon = "fa-question-circle";
                var text = "Desconocido";

                switch (type)
                {
                    case "consulta":
                        icon = "fa-stethoscope";
                        text = "Consulta";
                        break;
                    case "examen":
                        icon = "fa-file-waveform";
                        text = "Examen";
                        break;
                    case "operacion":
                        icon = "fa-syringe";
                        text = "Operación";
                        break;
                }

                var formattedDate = item.Date.ToString("dd MMM yyyy", culture);
                var startTime = DateTime.Today.Add(item.Time);
                var endTime = startTime.AddHours(1);
                <tr>
                    <td class="text-start">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            @Html.DisplayFor(modelItem => item.AppointmentId)
                        </span>
                    </td>
                    <td class="text-start">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            @Html.DisplayFor(modelItem => item.SpecialtyName)
                        </span>
                    </td>
                    <td>@Html.DisplayFor(modelItem => item.DoctorName)</td>
                    <td>@Html.DisplayFor(modelItem => item.PatientName)</td>
                    <td class="text-center">
                        <span class="badge bg-body-tertiary text-body-emphasis border">
                            <i class="fa-solid @icon me-1"></i>
                            @text
                        </span>
                    </td>
                    <td class="text-center">@formattedDate</td>
                    <td class="text-center">
                        @startTime.ToString("hh:mm tt", culture) - @endTime.ToString("hh:mm tt", culture)
                    </td>
                    <td class="text-center">
                        @{
                            var status = item.Status.ToLower();
                            string statusBadge;
                            string statusIcon;

                            switch (status)
                            {
                                case "atendida":
                                    statusBadge = "bg-success-subtle border-success-subtle text-success-emphasis";
                                    statusIcon = "fa-check";
                                    break;
                                case "cancelada":
                                    statusBadge = "bg-danger-subtle border-danger-subtle text-danger-emphasis";
                                    statusIcon = "fa-ban";
                                    break;
                                case "pendiente":
                                    statusBadge = "bg-warning-subtle border-warning-subtle text-warning-emphasis";
                                    statusIcon = "fa-hourglass-half";
                                    break;
                                case "confirmada":
                                    statusBadge = "bg-primary-subtle border-primary-subtle text-primary-emphasis";
                                    statusIcon = "fa-calendar-check";
                                    break;
                                default:
                                    statusBadge = "bg-secondary-subtle border-secondary-subtle text-secondary-emphasis";
                                    statusIcon = "fa-circle-question";
                                    break;
                            }

                            var formattedStatus = char.ToUpper(status[0]) + status.Substring(1);
                        }

                        <span class="badge border @statusBadge rounded-pill">
                            <i class="fa-solid @statusIcon me-1"></i>
                            @formattedStatus
                        </span>
                    </td>
                    <td class="text-center">
                        <a asp-action="Details" asp-controller="Appointments" asp-route-id="@item.AppointmentId" 
                           class="btn btn-secondary btn-sm" title="Detalles">
                            <i class="fa-solid fa-circle-info"></i>
                        </a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</section>

@section Scripts {
    <script>
        $(document).ready(function () {
            initCustomDataTable('#appointmentTable');
        });
    </script>
}
