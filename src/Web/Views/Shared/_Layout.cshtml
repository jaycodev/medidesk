@using System.Text.Json
@using System.Net.Http.Json
@using Shared.DTOs.Notifications
@using Web.Models.Account

@inject IHttpContextAccessor HttpContextAccessor
@inject IHttpClientFactory HttpFactory

@{
    var userJson = HttpContextAccessor.HttpContext!.Session.GetString("UserSession");
    UserSession? user = null;

    if (!string.IsNullOrEmpty(userJson))
    {
        var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
        user = JsonSerializer.Deserialize<UserSession>(userJson, options);
    }

    bool hasPhoto = !string.IsNullOrEmpty(user?.ProfilePicture);

    var notifications = new List<NotificationResponse>();
    if (user != null && !string.IsNullOrEmpty(user.ActiveRole))
    {
        var client = HttpFactory.CreateClient("ApiClient");
        try
        {
            if (user.ActiveRole.ToLower() == "medico")
            {
                notifications = await client.GetFromJsonAsync<List<NotificationResponse>>(
                    $"api/notifications/doctor/{user.UserId}?take=10&skip=0"
                ) ?? new List<NotificationResponse>();
            }
            else if (user.ActiveRole.ToLower() == "paciente")
            {
                notifications = await client.GetFromJsonAsync<List<NotificationResponse>>(
                    $"api/notifications/patient/{user.UserId}?take=10&skip=0"
                ) ?? new List<NotificationResponse>();
            }
        }
        catch
        {
            notifications = new List<NotificationResponse>();
        }
    }

    bool needsRoleSelection = user != null
        && user.Roles != null
        && user.Roles.Count > 1
        && string.IsNullOrEmpty(user.ActiveRole);
}

<!DOCTYPE html>
<html lang="es" data-bs-theme="auto">
<head>
    <meta charset="utf-8" />
    <meta name="description" content="Sistema de citas médicas con vistas para administrador, médico y paciente, que facilita la gestión, programación y seguimiento de consultas médicas.">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="~/js/color-modes.js" asp-append-version="true"></script>

    <title>@ViewData["Title"] - MediDesk</title>

    <link href="~/logo-dark.svg" rel="icon" media="(prefers-color-scheme: light)">
    <link href="~/logo-light.svg" rel="icon" media="(prefers-color-scheme: dark)">

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet" />

    <link href="~/css/theme.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/layout.css" rel="stylesheet" asp-append-version="true" />
    <link href="~/css/authenticated.css" rel="stylesheet" asp-append-version="true" />

    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.8/css/dataTables.bootstrap5.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/responsive/3.0.3/css/responsive.bootstrap5.css">
</head>
<body class="bg-body-tertiary" data-success="@TempData["Success"]" data-error="@TempData["Error"]">
    <!-- Offcanvas Sidebar -->
    <div class="offcanvas offcanvas-start offcanvas-custom bg-body" tabindex="-1" id="offcanvasSidebar" aria-labelledby="sidebarOffcanvasLabel">
        <div class="offcanvas-header">
            <a href="/" class="d-flex align-items-center text-center me-md-auto link-body-emphasis text-decoration-none ms-2">
                <i class="fa-solid fa-hospital me-2 fs-4"></i>
                <span class="fs-4 fw-semibold">MediDesk</span>
            </a>
            <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Cerrar"></button>
        </div>
        <div class="offcanvas-body p-0">
            <div class="sidebar d-flex flex-column flex-shrink-0 p-3 border-end h-100">
                @await Html.PartialAsync("_SidebarContent")
            </div>
        </div>
    </div>

    <!-- Sidebar fijo -->
    <div class="sidebar-fixed d-flex flex-column flex-shrink-0 p-3 bg-body border-end">
        <a href="/" class="d-flex align-items-center text-center mb-4 me-md-auto link-body-emphasis text-decoration-none ms-2">
            <i class="fa-solid fa-hospital me-2 fs-4"></i>
            <span class="fs-4 fw-semibold">MediDesk</span>
        </a>
        @await Html.PartialAsync("_SidebarContent")
    </div>

    <!-- Header -->
    <header class="header-fixed d-flex align-items-center py-3 border-bottom bg-body">
        <div class="container-fluid d-flex justify-content-between align-items-center">
            <!-- Izquierda -->
            <div class="d-flex align-items-center" style="min-width: 80px;">
                <button class="btn d-lg-none" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasSidebar" aria-controls="offcanvasSidebar" aria-label="Menú">
                    <i class="fas fa-bars"></i>
                </button>
                <input type="search" class="form-control ms-2 d-none d-lg-block" placeholder="Buscar..." style="max-width: 220px;">
            </div>

            <!-- Buscador en mobile -->
            <div class="text-center flex-grow-1 position-absolute start-50 translate-middle-x">
                <input type="search"
                       class="form-control mx-auto d-block d-lg-none me-sm-5"
                       placeholder="Buscar..."
                       style="max-width: 200px; transform: translateX(-25px);">
            </div>

            <!-- Derecha -->
            <div class="d-flex align-items-center justify-content-end gap-3 ms-auto">
                @await Html.PartialAsync("_ToggleTheme")

                @if (user?.ActiveRole != "administrador")
                {
                    <div class="dropdown">
                        <button class="btn btn-link nav-link position-relative link-body-emphasis" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="fa-solid fa-bell"></i>
                            @if (notifications.Any())
                            {
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill bg-danger">
                                    @notifications.Count
                                </span>
                            }
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end p-2" style="width: 330px;">
                            @if (notifications.Any())
                            {
                                var total = notifications.Count;
                                var index = 0;

                                foreach (var n in notifications)
                                {
                                    index++;

                                    string badgeClass = "";
                                    string iconClass = "";
                                    string label = "";

                                    if (n.Message.Contains("solicitada"))
                                    {
                                        badgeClass = "bg-warning-subtle border-warning-subtle text-warning-emphasis";
                                        iconClass = "fa-hourglass-half";
                                        label = "Pendiente";
                                    }
                                    else if (n.Message.Contains("cancelada"))
                                    {
                                        badgeClass = "bg-danger-subtle border-danger-subtle text-danger-emphasis";
                                        iconClass = "fa-ban";
                                        label = "Cancelada";
                                    }
                                    else if (n.Message.Contains("confirmada"))
                                    {
                                        badgeClass = "bg-primary-subtle border-primary-subtle text-primary-emphasis";
                                        iconClass = "fa-calendar-check";
                                        label = "Confirmada";
                                    }
                                    else if (n.Message.Contains("atendida"))
                                    {
                                        badgeClass = "bg-success-subtle border-success-subtle text-success-emphasis";
                                        iconClass = "fa-check";
                                        label = "Atendida";
                                    }

                                    var liClass = (index < total) ? "mb-2" : "";

                                    <li class="@liClass">
                                        <a class="dropdown-item rounded text-wrap notification-link"
                                           href="@Url.Action("Details", "Appointments", new { id = n.AppointmentId })"
                                           data-id="@n.NotificationId"
                                           data-href="@Url.Action("Details", "Appointments", new { id = n.AppointmentId })">
                                            <div class="d-flex flex-column text-break text-body-emphasis">
                                                <span class="badge border @badgeClass rounded-pill mb-1 w-fit-content">
                                                    <i class="fa-solid @iconClass me-1"></i> @label
                                                </span>
                                                <span>@n.Message</span>
                                            </div>
                                            @{
                                                var culture = new System.Globalization.CultureInfo("es-ES");
                                                var fecha = n.CreatedAt.ToString("dd MMM yyyy", culture);
                                                var hora = n.CreatedAt.ToString("hh:mm", culture);
                                                var ampm = n.CreatedAt.ToString("tt", System.Globalization.CultureInfo.InvariantCulture) == "AM" ? "a. m." : "p. m.";
                                            }
                                            <small>@fecha - @hora @ampm</small>
                                        </a>
                                    </li>
                                }
                            }
                            else
                            {
                                <li><span class="dropdown-item text-muted">Sin notificaciones</span></li>
                            }
                        </ul>
                    </div>
                }

                <div class="dropdown">
                    <button type="button" class="btn btn-link nav-link d-flex align-items-center link-body-emphasis" data-bs-toggle="dropdown" aria-expanded="false" aria-label="Abrir menú de usuario">
                        @if (hasPhoto)
                        {
                            <img src="@(user?.ProfilePicture)" alt="Foto de perfil" width="28" height="28" class="rounded-circle border" />
                        }
                        else
                        {
                            <i class="fa-solid fa-circle-user" style="font-size: 28px;"></i>
                        }
                    </button>
                    <ul class="dropdown-menu dropdown-menu-end text-small gap-1 p-2 rounded-3 mx-0 shadow">
                        <li>
                            <a class="dropdown-item rounded-2" asp-controller="Profile" asp-action="Index">
                                <i class="fa-solid fa-user me-2"></i> Perfil
                            </a>
                        </li>
                        @if (user?.Roles?.Count > 1)
                        {
                            <li>
                                <button class="dropdown-item rounded-2" data-bs-toggle="modal" data-bs-target="#selectRoleModal">
                                    <i class="fa-solid fa-repeat me-2"></i>
                                    Cambiar rol
                                </button>
                            </li>
                        }
                        <li><hr class="dropdown-divider"></li>
                        <li>
                            <button class="dropdown-item dropdown-danger text-danger rounded-2" data-bs-toggle="modal" data-bs-target="#logoutModal">
                                <i class="fa-solid fa-arrow-right-from-bracket me-2 icon"></i>
                                Cerrar sesión
                            </button>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </header>

    <!-- Main -->
    <main class="main-content p-4">
        @RenderBody()
    </main>

    <!-- Modal logout -->
    <div class="modal fade" id="logoutModal" tabindex="-1" aria-labelledby="logoutModalLabel" aria-hidden="true" data-bs-backdrop="static">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-body-emphasis">Confirmar cierre de sesión</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>¿Estás seguro de que deseas cerrar tu sesión?</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn d-flex align-items-center" data-bs-dismiss="modal">Cancelar</button>
                    <form asp-controller="Account" asp-action="Logout" method="post" asp-antiforgery="true">
                        <button type="submit" class="btn btn-danger d-flex align-items-center">
                            <i class="fa-solid fa-arrow-right-from-bracket me-1"></i> Cerrar sesión
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    @if (user?.Roles?.Count > 1)
    {
        <div class="modal fade" id="selectRoleModal" tabindex="-1" aria-labelledby="selectRoleLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <i class="fa-solid fa-user-gear me-2"></i>
                        <h5 class="modal-title">Selecciona tu rol</h5>
                    </div>
                    <div class="modal-body">
                        <p>Elige cómo deseas interactuar con el sistema.</p>
                        @foreach (var role in user.Roles)
                        {
                            var roleLower = role.ToLower();
                            var icon = "fa-user";
                            var label = role;

                            switch (roleLower)
                            {
                                case "paciente":
                                    icon = "fa-bed-pulse";
                                    label = "Paciente"; break;
                                case "medico":
                                    icon = "fa-user-doctor";
                                    label = "Médico"; break;
                                case "administrador":
                                    icon = "fa-user-shield";
                                    label = "Administrador"; break;
                            }

                            <form asp-controller="Account" asp-action="SetActiveRole" method="post" class="mb-2">
                                <input type="hidden" name="role" value="@roleLower" />
                                <button type="submit" class="btn btn-secondary w-100 d-flex align-items-center justify-content-center">
                                    <i class="fa-solid @icon me-2"></i> @label
                                </button>
                            </form>
                        }
                    </div>
                </div>
            </div>
        </div>
    }

    <!-- Scripts -->
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.js" defer></script>
    <script src="https://cdn.datatables.net/2.1.8/js/dataTables.bootstrap5.js" defer></script>
    <script src="https://cdn.datatables.net/responsive/3.0.3/js/dataTables.responsive.js" defer></script>
    <script src="https://cdn.datatables.net/responsive/3.0.3/js/responsive.bootstrap5.js" defer></script>

    <script src="~/js/dataTable-init.js" asp-append-version="true"></script>
    <script src="~/js/alerts.js" asp-append-version="true"></script>

    @await RenderSectionAsync("Scripts", required: false)

    @if (needsRoleSelection)
    {
        <script>
            window.addEventListener('DOMContentLoaded', function () {
                var modal = new bootstrap.Modal(document.getElementById('selectRoleModal'));
                modal.show();
            });
        </script>
    }

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.notification-link').forEach(link => {
                link.addEventListener('click', function (e) {
                    e.preventDefault();

                    const notiId = this.getAttribute('data-id');
                    const href = this.getAttribute('data-href');

                    fetch('/notifications/delete', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ id: parseInt(notiId) })
                    })
                    .then(() => {
                        window.location.href = href;
                    });
                });
            });
        });
    </script>
</body>
</html>
