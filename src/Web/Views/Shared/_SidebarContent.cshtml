@using System.Text.Json
@using Web.Models.Account
@using Web.Helpers

@inject IHttpContextAccessor HttpContextAccessor

@{
    var currentController = ViewContext.RouteData.Values["controller"]?.ToString()?.ToLower();
    var currentAction = ViewContext.RouteData.Values["action"]?.ToString()?.ToLower();

    var userJson = HttpContextAccessor.HttpContext!.Session.GetString("UserSession");
    UserSession? user = null;

    if (!string.IsNullOrEmpty(userJson))
    {
        var options = new JsonSerializerOptions { PropertyNameCaseInsensitive = true };
        user = JsonSerializer.Deserialize<UserSession>(userJson, options);
    }

    var activeRole = user?.ActiveRole?.ToLower();
    var sidebarItems = SidebarHelper.GetSidebarItems(activeRole);
    var homeItem = sidebarItems.FirstOrDefault(i => i.Title == "Inicio");
    var otherItems = sidebarItems.Where(i => i.Title != "Inicio").ToList();

    var isAppointmentsSection = currentController == "appointments" &&
        currentAction != "reserve" &&
        currentAction != "home";

    var isAdmin = activeRole == "administrador";
}


<ul class="nav nav-pills flex-column mb-auto">
    @if (homeItem != null)
    {
        <li>
            <a href="@Url.Action(homeItem.Action, homeItem.Controller)"
               class="nav-link @(currentController == homeItem.Controller.ToLower() && currentAction == homeItem.Action.ToLower() ? "active" : "link-body-emphasis")">
                <i class="@homeItem.Icon me-2 icon"></i>
                @homeItem.Title
            </a>
        </li>
    }

    @if (!isAdmin)
    {
        <li class="nav-item">
            <a class="nav-link d-flex justify-content-between align-items-center @(isAppointmentsSection ? "active" : "link-body-emphasis")"
               data-bs-toggle="collapse"
               href="#submenuCitas"
               role="button"
               aria-expanded="true"
               aria-controls="submenuCitas">
                <span>
                    <i class="fa-solid fa-notes-medical me-2 icon"></i>
                    Citas médicas
                </span>
                <i class="fa-solid fa-chevron-down small transition"></i>
            </a>

            <div class="collapse show ps-4" id="submenuCitas">
                <ul class="btn-toggle-nav list-unstyled fw-normal pb-1 small">
                    <li>
                        <a href="@Url.Action("MyAppointments", "Appointments")"
                           class="nav-link ms-2 @(currentAction == "myappointments" ? "" : "link-body-emphasis")">
                            <i class="fa-solid fa-calendar-days me-1 icon"></i>
                            Mis citas
                        </a>
                    </li>

                    <li>
                        <a href="@Url.Action("Pending", "Appointments")"
                           class="nav-link ms-2 @(currentAction == "pending" ? "" : "link-body-emphasis")">
                            <i class="fa-solid fa-hourglass-half me-1 icon"></i>
                            Citas pendientes
                        </a>
                    </li>

                    <li>
                        <a href="@Url.Action("Historial", "Appointments")"
                           class="nav-link ms-2 @(currentAction == "historial" ? "" : "link-body-emphasis")">
                            <i class="fa-solid fa-clock-rotate-left me-1 icon"></i>
                            Historial de citas
                        </a>
                    </li>
                </ul>
            </div>
        </li>
    }

    @foreach (var item in otherItems)
    {
        var isAppointments = item.Controller.ToLower() == "appointments";
        var isActive = isAppointments
        ? (currentController == item.Controller.ToLower() && currentAction == item.Action.ToLower())
        : (currentController == item.Controller.ToLower());

        <li>
            <a href="@Url.Action(item.Action, item.Controller)"
               class="nav-link @(isActive ? "active" : "link-body-emphasis")">
                <i class="@item.Icon me-2 icon"></i>
                @item.Title
            </a>
        </li>
    }
</ul>

@if (!string.IsNullOrEmpty(user?.ActiveRole))
{
    var role = user.ActiveRole.ToLower();
    var roleLabel = "Desconocido";
    var roleIcon = "fa-user";

    switch (role)
    {
        case "paciente":
            roleLabel = "Paciente";
            roleIcon = "fa-bed-pulse";
            break;
        case "medico":
            roleLabel = "Médico";
            roleIcon = "fa-user-doctor";
            break;
        case "administrador":
            roleLabel = "Administrador";
            roleIcon = "fa-user-shield";
            break;
    }

    <div class="mb-2">
        <span class="badge bg-body-tertiary text-body-emphasis border">
            <i class="fa-solid @roleIcon me-1"></i>
            @roleLabel
        </span>
    </div>
}

<div class="text-muted small">
    @{
        var greeting = DateTime.Now.Hour < 12 ? "Buenos días" :
        DateTime.Now.Hour < 18 ? "Buenas tardes" : "Buenas noches";
    }
    @greeting, <strong>@user.FirstName</strong>
</div>
