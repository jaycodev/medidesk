@model Web.Models.Users.UserEditViewModel

@{
    ViewData["Title"] = "Editar usuario";
}

<h4 class="text-center mb-3 text-body-emphasis">
    <i class="fa-solid fa-pen me-1"></i>
    Editar usuario
</h4>

<form asp-action="Edit" method="post" id="editUserForm">
    @if (ViewBag.Message != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fa-solid fa-circle-xmark me-1"></i>
            @ViewBag.Message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <p class="text-danger mb-3">
        * Obligatorio
    </p>

    <input asp-for="UserId" type="hidden" />

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            <label class="form-label">@Html.DisplayNameFor(m => m.UserId)</label>
            <input asp-for="UserId" class="form-control" disabled />
        </div>

        <div class="col-md-6">
            <label asp-for="FirstName" class="form-label"></label>
            <span class="text-danger">*</span>
            <input asp-for="FirstName" class="form-control" placeholder="Ingrese un(os) nombre(s)" />
            <span asp-validation-for="FirstName" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            <label asp-for="LastName" class="form-label"></label>
            <span class="text-danger">*</span>
            <input asp-for="LastName" class="form-control" placeholder="Ingrese un(os) apellido(s)" />
            <span asp-validation-for="LastName" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Email" class="form-label"></label>
            <span class="text-danger">*</span>
            <input asp-for="Email" type="email" class="form-control" placeholder="correo@ejemplo.com" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>
    </div>

    <div class="row mb-2">
        <div class="col-md-6 mb-2">
            <label asp-for="Phone" class="form-label"></label>
            <input asp-for="Phone"
                   type="tel"
                   class="form-control"
                   placeholder="Ingrese número telefónico"
                   maxlength="9" />
            <span asp-validation-for="Phone" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Roles" class="form-label"></label>
            <span class="text-danger">*</span>
            <select asp-for="SelectedRoleCombo" class="form-select" id="SelectedRoleCombo">
                <option value="">Seleccione una combinación de rol(es)</option>
                <option value="administrador" selected="@(Model.SelectedRoleCombo == "administrador")">Administrador</option>
                <option value="medico" selected="@(Model.SelectedRoleCombo == "medico")">Médico</option>
                <option value="paciente" selected="@(Model.SelectedRoleCombo == "paciente")">Paciente</option>
                <option value="medico,paciente" selected="@(Model.SelectedRoleCombo == "medico,paciente")">Médico y Paciente</option>
            </select>
            <span asp-validation-for="SelectedRoleCombo" class="text-danger"></span>
        </div>
    </div>

    <div id="doctor-fields" class="row mb-2 @(Model.IsDoctor ? "" : "d-none")">
        <hr class="my-4" />
        <h4 class="text-body-emphasis text-center mb-4">
            <i class="fa-solid fa-user-doctor me-1"></i> Editar médico
        </h4>

        <div class="col-md-6 mb-2">
            <label asp-for="SpecialtyId" class="form-label"></label>
            <span class="text-danger">*</span>
            <select asp-for="SpecialtyId" asp-items="ViewBag.Specialties" class="form-select" id="SpecialtyId">
                <option value="">Seleccione una especialidad</option>
            </select>
            <span asp-validation-for="SpecialtyId" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="Status" class="form-label"></label>
            <span class="text-danger">*</span>
            <select asp-for="Status" class="form-select" id="Status">
                <option value="">Seleccione un estado</option>
                <option value="true" selected="@(Model.Status==true)">Activo</option>
                <option value="false" selected="@(Model.Status==false)">Inactivo</option>
            </select>
            <span asp-validation-for="Status" class="text-danger"></span>
        </div>
    </div>

    <div id="patient-fields" class="row mb-2 @(Model.IsPatient ? "" : "d-none")">
        <hr class="my-4" />
        <h4 class="text-body-emphasis text-center mb-4">
            <i class="fa-solid fa-bed-pulse me-1"></i> Editar paciente
        </h4>

        <div class="col-md-6 mb-2">
            <label asp-for="BirthDate" class="form-label"></label>
            <span class="text-danger">*</span>
            <input asp-for="BirthDate" type="date" class="form-control" />
            <span asp-validation-for="BirthDate" class="text-danger"></span>
        </div>

        <div class="col-md-6">
            <label asp-for="BloodType" class="form-label"></label>
            <select asp-for="BloodType" class="form-select">
                <option value="">Seleccione un grupo sanguíneo</option>
                <option>A+</option>
                <option>A-</option>
                <option>B+</option>
                <option>B-</option>
                <option>AB+</option>
                <option>AB-</option>
                <option>O+</option>
                <option>O-</option>
            </select>
            <span asp-validation-for="BloodType" class="text-danger"></span>
        </div>
    </div>

    <div class="d-flex justify-content-end gap-2 mt-3">
        <a asp-action="Index" class="btn btn-secondary">
            <i class="fa-solid fa-left-long me-1"></i> Volver
        </a>

        <button type="submit" class="btn btn-primary">
            <i class="fa-solid fa-floppy-disk me-1"></i> Guardar
        </button>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script>
        function toggleRoleFields() {
            const selected = $('#SelectedRoleCombo').val() || '';
            const isDoctor = selected.includes('medico');
            const isPatient = selected.includes('paciente');

            $('#doctor-fields').toggleClass('d-none', !isDoctor);
            $('#patient-fields').toggleClass('d-none', !isPatient);

            if (isDoctor) {
                const $specialty = $('#SpecialtyId');
                if ($specialty.children().length <= 1) {
                    $.get('/Users/GetSpecialties', function (data) {
                        $specialty.empty().append('<option value="">Seleccione una especialidad</option>');
                        data.forEach(s => {
                            $specialty.append(`<option value="${s.specialtyId}">${s.name}</option>`);
                        });
                        $specialty.prop('disabled', false);
                    });
                } else {
                    $specialty.prop('disabled', false);
                }
            } else {
                $('#SpecialtyId').val('').prop('disabled', true);
                $('#Status').val('');
            }
        }

        $(function () {
            toggleRoleFields();
            $('#SelectedRoleCombo').on('change', toggleRoleFields);

            const dynamicFields = ['SpecialtyId', 'Status', 'BirthDate'];

            dynamicFields.forEach(function (fieldName) {
                const $field = $('[name="' + fieldName + '"]');
                const $errorSpan = $('span[data-valmsg-for="' + fieldName + '"]');
                if ($errorSpan.hasClass('field-validation-error')) {
                    $field.addClass('is-invalid');
                }
            });

            const form = $('#editUserForm');
            if (form.length && form.data('validator')) {
                const validator = form.data('validator');
                const oldShowErrors = validator.showErrors;
                validator.showErrors = function (errors) {
                    oldShowErrors.call(this, errors);
                    dynamicFields.forEach(function (fieldName) {
                        $('[name="' + fieldName + '"]').removeClass('is-invalid');
                    });
                    $.each(this.errorList, function (_, error) {
                        const name = $(error.element).attr('name');
                        if (dynamicFields.includes(name)) {
                            $(error.element).addClass('is-invalid');
                        }
                    });
                };
            }
        });
    </script>
}
